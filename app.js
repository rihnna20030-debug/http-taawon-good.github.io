// üî• ÿßÿ≥ÿ™Ÿäÿ±ÿßÿØ ŸÖŸÉÿ™ÿ®ÿßÿ™ Firebase
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.4/firebase-app.js";
import {
  getFirestore, collection, addDoc, onSnapshot,
  query, orderBy, serverTimestamp
} from "https://www.gstatic.com/firebasejs/10.12.4/firebase-firestore.js";
import {
  getAuth, signInAnonymously, onAuthStateChanged
} from "https://www.gstatic.com/firebasejs/10.12.4/firebase-auth.js";

// üîß ÿ•ÿπÿØÿßÿØÿßÿ™ ŸÖÿ¥ÿ±ŸàÿπŸÉ ŸÅŸä Firebase
const firebaseConfig = {
  apiKey: "AIzaSyAq0OT0-KJtJpY1S59SDT7xy2JoM7zc",
  authDomain: "taawon-good.firebaseapp.com",
  projectId: "taawon-good",
  storageBucket: "taawon-good.appspot.com",
  messagingSenderId: "942276973941",
  appId: "1:942276973941:web:380897d6d97382b084b50d",
  measurementId: "G-SL7HBNNE0L"
};

// üöÄ ÿ™ŸáŸäÿ¶ÿ© Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
const auth = getAuth(app);

// üåü ÿπŸÜÿßÿµÿ± ÿßŸÑÿµŸÅÿ≠ÿ©
const btnAnon = document.getElementById("btnAnonSignIn");
const formMsg = document.getElementById("formMsg");
const form = document.getElementById("postForm");
const titleEl = document.getElementById("title");
const cityEl = document.getElementById("city");
const descEl = document.getElementById("description");
const catEl = document.getElementById("category");
const postsDiv = document.getElementById("posts");
const emptyState = document.getElementById("emptyState");

let uid = null;

// üü¢ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿØÿÆŸàŸÑ ŸÖÿ¨ŸáŸàŸÑ
btnAnon?.addEventListener("click", async () => {
  try {
    await signInAnonymously(auth);
    formMsg.textContent = "ÿ™ŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ‚úÖ";
  } catch (e) {
    formMsg.textContent = "ÿ™ÿπÿ∞Ÿëÿ± ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ‚ùå";
    console.error(e);
  }
});

// ÿ≠ŸÅÿ∏ ÿ≠ÿßŸÑÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ
onAuthStateChanged(auth, (user) => {
  uid = user ? user.uid : null;
});

// ‚è∞ ÿ™ŸÜÿ≥ŸäŸÇ ÿßŸÑŸàŸÇÿ™ ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ©
function fmt(ts) {
  if (!ts?.toDate) return "ÿßŸÑÿ¢ŸÜ";
  const d = ts.toDate();
  return d.toLocaleString("ar-SA", {
    hour: "2-digit",
    minute: "2-digit",
    year: "numeric",
    month: "short",
    day: "numeric",
  });
}

// üß∫ ÿ•ŸäŸÖŸàÿ¨Ÿä ÿ≠ÿ≥ÿ® ŸÜŸàÿπ ÿßŸÑŸÖÿ¥ÿßÿ±ŸÉÿ©
function catEmoji(c) {
  if (c === "ÿ™ÿ®ÿ±ÿπ") return "üß∫";
  if (c === "ÿ∑ŸÑÿ®") return "üôè";
  if (c === "ŸÅÿπÿßŸÑŸäÿ©") return "üéâ";
  return "‚ú®";
}

// üì® ÿ•ÿ±ÿ≥ÿßŸÑ ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿ¨ÿØŸäÿØÿ©
form?.addEventListener("submit", async (e) => {
  e.preventDefault();
  if (!uid) {
    formMsg.textContent = "ÿ≥ÿ¨ŸëŸÑŸä ÿØÿÆŸàŸÑ ÿ≥ÿ±Ÿäÿπ ÿ£ŸàŸÑÿßŸã.";
    return;
  }

  const data = {
    title: titleEl.value.trim(),
    city: cityEl.value.trim(),
    description: descEl.value.trim(),
    category: catEl?.value || "ÿ™ÿ®ÿ±ÿπ",
    createdAt: serverTimestamp(),
    createdBy: uid,
  };

  if (!data.title) {
    formMsg.textContent = "ÿßŸÑÿπŸÜŸàÿßŸÜ ÿ•ÿ¨ÿ®ÿßÿ±Ÿä.";
    return;
  }

  try {
    await addDoc(collection(db, "posts"), data);
    form.reset();
    formMsg.textContent = "‚úÖ ÿ™ŸÖÿ™ ÿßŸÑÿ•ÿ∂ÿßŸÅÿ© ÿ®ŸÜÿ¨ÿßÿ≠!";
    setTimeout(() => (formMsg.textContent = ""), 2000);
  } catch (err) {
    console.error(err);
    formMsg.textContent = "‚ùå ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿßŸÑÿ≠ŸÅÿ∏";
  }
});

// üëÄ ÿπÿ±ÿ∂ ÿßŸÑŸÖÿ¥ÿßÿ±ŸÉÿßÿ™ ŸÑÿ≠ÿ∏ŸäŸãÿß ŸÖÿπ ÿßŸÑÿ™ÿ£ÿ´Ÿäÿ±ÿßÿ™
if (postsDiv) {
  const q = query(collection(db, "posts"), orderBy("createdAt", "desc"));
  onSnapshot(q, (snap) => {
    postsDiv.innerHTML = "";
    if (snap.empty) {
      emptyState.style.display = "block";
      return;
    }
    emptyState.style.display = "none";

    snap.forEach((doc) => {
      const p = doc.data();
      const badgeClass =
        p.category === "ÿ™ÿ®ÿ±ÿπ"
          ? "green"
          : p.category === "ÿ∑ŸÑÿ®"
          ? "yellow"
          : "blue";

      const el = document.createElement("article");
      el.className = "post";
      el.style.animationDelay = ${Math.random() * 0.3}s;

      el.innerHTML = `
        <div class="post-head">
          <span class="badge ${badgeClass}">
            ${catEmoji(p.category)} ${p.category || ""}
          </span>
          <small class="muted">${fmt(p.createdAt)}</small>
        </div>
        <h4>${p.title || ""}</h4>
        <p>${p.description || ""}</p>
        <div class="meta">${p.city ? "üìç " + p.city : ""}</div>
      `;
      postsDiv.appendChild(el);
    });
  });
}
